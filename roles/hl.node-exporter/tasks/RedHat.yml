---
- name: RedHat | Install Packages
  ansible.builtin.package:
    name: "{{ item }}"
    state: present
  loop: "{{ packages }}"

#
# Configure Node Exporter systemd service
#
- name: RedHat | Create System Group {{ prometheus_user }}
  ansible.builtin.group:
    state: present
    system: true
    name: "{{ prometheus_user }}"

- name: RedHat | Create System User {{ prometheus_user }}
  ansible.builtin.user:
    state: present
    system: true
    name: "{{ prometheus_user }}"
    groups: "{{ prometheus_user }}"
    shell: "/sbin/nologin"

- name: RedHat | Check Services
  ansible.builtin.service_facts:

- name: RedHat | Enable Service in Firewalld {{ node_exporter_port }}
  ansible.posix.firewalld:
    immediate: true
    port: "{{ node_exporter_port }}/tcp"
    permanent: true
    state: enabled
  when: "'firewalld.service' in ansible_facts.services"

- name: RedHat | Unarchive a file that needs to be downloaded
  ansible.builtin.unarchive:
    src: "{{ node_exporter_url }}"
    dest: "/usr/local/bin"
    remote_src: true
    owner: root
    group: root
    extra_opts:
      - "--strip-components"
      - "1"

- name: RedHat | Copy Systemd File {{ node_exporter_systemd_service }}
  ansible.builtin.template:
    src: "{{ node_exporter_systemd_service }}.j2"
    dest: "/etc/systemd/system/{{ node_exporter_systemd_service }}"
    owner: root
    group: root
    mode: "0644"

- name: RedHat | Force Systemd to Reread Configs
  ansible.builtin.systemd:
    daemon_reload: true

- name: RedHat | Start and Enable Service {{ node_exporter_systemd_service }}
  ansible.builtin.service:
    name: "{{ node_exporter_systemd_service }}"
    state: started
    enabled: true
