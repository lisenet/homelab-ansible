---
- name: RedHat | Install Packages
  ansible.builtin.package:
    name: "{{ item }}"
    state: present
  loop: "{{ packages }}"

- name: RedHat | Enable Service in Firewalld {{ item }}
  ansible.posix.firewalld:
    immediate: true
    port: "{{ item }}/tcp"
    permanent: true
    state: enabled
  loop:
    - "{{ haproxy_frontend_port }}"
    - "{{ haproxy_stats_port }}"

- name: RedHat | SELinux - Allow HAProxy to Bind to TCP Port {{ haproxy_frontend_port }}
  community.general.seport:
    ports: "{{ haproxy_frontend_port }}"
    proto: tcp
    setype: http_cache_port_t
    state: present

- name: RedHat | Generate Diffie-Hellman Key
  community.crypto.openssl_dhparam:
    path: "{{ haproxy_dh_key }}"
    size: 2048
    owner: 0
    group: 0
    mode: "0644"

- name: RedHat | Copy HAProxy Certificate File
  ansible.builtin.template:
    src: "files/haproxy.pem"
    dest: "/etc/pki/tls/certs/haproxy.pem"
    mode: "0600"
  notify: Restart haproxy

- name: RedHat | Copy HAProxy Configuration File
  ansible.builtin.template:
    src: "{{ haproxy_config_file }}.j2"
    dest: "/etc/haproxy/{{ haproxy_config_file }}"
    mode: "0644"
    validate: "haproxy -f %s -c -q"
  notify: Restart haproxy

- name: RedHat | Start and Enable Service {{ systemd_service }}
  ansible.builtin.service:
    name: "{{ systemd_service }}"
    state: started
    enabled: true

#
# Configure HAProxy Exporter systemd service
#
- name: RedHat | Create System Group {{ prometheus_user }}
  ansible.builtin.group:
    state: present
    system: true
    name: "{{ prometheus_user }}"

- name: RedHat | Create System User {{ prometheus_user }}
  ansible.builtin.user:
    state: present
    system: true
    name: "{{ prometheus_user }}"
    groups: "{{ prometheus_user }}"
    shell: "/sbin/nologin"

- name: RedHat | Enable Service in Firewalld {{ haproxy_exporter_port }}
  ansible.posix.firewalld:
    immediate: true
    port: "{{ haproxy_exporter_port }}/tcp"
    permanent: true
    state: enabled

- name: RedHat | Unarchive a file that needs to be downloaded
  ansible.builtin.unarchive:
    src: "{{ haproxy_exporter_url }}"
    dest: "/usr/local/bin"
    remote_src: true
    owner: root
    group: root
    extra_opts:
      - "--strip-components"
      - "1"

- name: RedHat | Copy Systemd File {{ haproxy_exporter_systemd_service }}
  ansible.builtin.template:
    src: "{{ haproxy_exporter_systemd_service }}.j2"
    dest: "/etc/systemd/system/{{ haproxy_exporter_systemd_service }}"
    owner: root
    group: root
    mode: "0644"

- name: RedHat | Force Systemd to Reread Configs
  ansible.builtin.systemd:
    daemon_reload: true

- name: RedHat | Start and Enable Service {{ haproxy_exporter_systemd_service }}
  ansible.builtin.service:
    name: "{{ haproxy_exporter_systemd_service }}"
    state: started
    enabled: true
