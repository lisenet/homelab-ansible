---
- name: RedHat | Install Packages
  package: 
    name: "{{ item }}"
    state: present
  loop: "{{ packages }}"

- name: RedHat | Enable Service {{ item }} in Firewalld
  firewalld:
    immediate: yes
    port: "{{ item }}/tcp"
    permanent: yes
    state: enabled
  loop:
    - "{{ haproxy_frontend_port }}"
    - "{{ haproxy_stats_port }}"

- name: RedHat | Allow HAProxy to Bind to TCP Port {{ haproxy_frontend_port }} (SELinux)
  community.general.seport:
    ports: "{{ haproxy_frontend_port }}"
    proto: tcp
    setype: http_cache_port_t
    state: present

- name: RedHat | Copy HAProxy Certificate File
  template:
    src: "files/haproxy.pem"
    dest: "/etc/pki/tls/certs/haproxy.pem"
    mode: 0600
  notify: restart haproxy

- name: RedHat | Copy HAProxy Configuration File
  template:
    src: "{{ haproxy_config_file }}.j2"
    dest: "/etc/haproxy/{{ haproxy_config_file }}"
    mode: 0644
    validate: "haproxy -f %s -c -q"
  notify: restart haproxy

- name: RedHat | Start and Enable Service {{ systemd_service }}
  service:
    name: "{{ systemd_service }}"
    state: started
    enabled: yes

#
# Configure HAProxy Exporter systemd service
#
- name: RedHat | Create System Group {{ prometheus_user }}
  group:
    state: present
    system: yes
    name: "{{ prometheus_user }}"

- name: RedHat | Create System User {{ prometheus_user }}
  user:
    state: present
    system: yes
    name: "{{ prometheus_user }}"
    groups: "{{ prometheus_user }}"
    shell: "/sbin/nologin"

- name: RedHat | Enable Service {{ haproxy_exporter_port }} in Firewalld
  firewalld:
    immediate: yes
    port: "{{ haproxy_exporter_port }}/tcp"
    permanent: yes
    state: enabled

- name: RedHat | Unarchive a file that needs to be downloaded
  unarchive:
    src: "{{ haproxy_exporter_url }}"
    dest: "/usr/local/bin"
    remote_src: yes
    owner: root
    group: root
    extra_opts:
      - "--strip-components"
      - "1"

- name: RedHat | Copy {{ haproxy_exporter_systemd_service }} Systemd File
  template: 
    src: "{{ haproxy_exporter_systemd_service }}.j2"
    dest: "/etc/systemd/system/{{ haproxy_exporter_systemd_service }}"
    owner: root
    group: root
    mode: 0644

- name: RedHat | systemctl daemon-reload
  command: systemctl daemon-reload 

- name: RedHat | Start and Enable Service {{ haproxy_exporter_systemd_service }}
  service:
    name: "{{ haproxy_exporter_systemd_service }}"
    state: started
    enabled: yes
