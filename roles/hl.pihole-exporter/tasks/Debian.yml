---
- name: Debian | Install Packages
  ansible.builtin.package:
    name: "{{ item }}"
    state: present
  loop: "{{ packages }}"

#
# Configure Pi-hole Exporter systemd service
#
- name: Debian | Create System Group {{ prometheus_user }}
  ansible.builtin.group:
    state: present
    system: true
    name: "{{ prometheus_user }}"

- name: Debian | Create System User {{ prometheus_user }}
  ansible.builtin.user:
    state: present
    system: true
    name: "{{ prometheus_user }}"
    groups: "{{ prometheus_user }}"
    shell: "/sbin/nologin"

- name: Debian | Unarchive a file that needs to be downloaded
  ansible.builtin.unarchive:
    src: "{{ pihole_exporter_url }}"
    dest: "/usr/local/bin"
    remote_src: true
    owner: root
    group: root
    creates: "/usr/local/bin/{{ pihole_exporter_binary }}"
    extra_opts:
      - "--strip-components"
      - "1"

- name: Debian | Copy Systemd File {{ pihole_exporter_systemd_service }}
  ansible.builtin.template:
    src: "{{ pihole_exporter_systemd_service }}.j2"
    dest: "/etc/systemd/system/{{ pihole_exporter_systemd_service }}"
    owner: root
    group: root
    mode: "0644"

- name: Debian | Force Systemd to Reread Configs
  ansible.builtin.systemd:
    daemon_reload: true

- name: Debian | Start and Enable Service {{ pihole_exporter_systemd_service }}
  ansible.builtin.service:
    name: "{{ pihole_exporter_systemd_service }}"
    state: started
    enabled: true
