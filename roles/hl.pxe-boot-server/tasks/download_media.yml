---
- name: download_media | Download ISO with check (sha256) - this will take time {{ outer_item.name }}
  ansible.builtin.get_url:
    url: "{{ outer_item.iso_url }}"
    dest: "/root/{{ outer_item.name }}.iso"
    mode: "0644"
    checksum: "sha256:{{ outer_item.iso_sha256 }}"

- name: download_media | Mount ISO read-only {{ outer_item.name }}
  ansible.posix.mount:
    path: "/mnt"
    src: "/root/{{ outer_item.name }}.iso"
    fstype: iso9660
    opts: ro,noauto
    state: mounted

- name: download_media | Copy Files to FTP/NFS Directory {{ outer_item.source_directory }}
  ansible.builtin.copy:
    src: "/mnt/"
    dest: "{{ outer_item.source_directory }}"
    setype: "{{ outer_item.setype }}"
    force: true
    remote_src: true
    mode: "0444"
    directory_mode: "0555"

- name: download_media | Set Folder Mode on {{ outer_item.source_directory }}
  ansible.builtin.file:
    path: "{{ outer_item.source_directory }}"
    mode: "0755"

- name: download_media | Run restorecon on {{ outer_item.source_directory }}
  ansible.builtin.command: restorecon -Rv "{{ outer_item.source_directory }}"
  register: restorecon_output # Registers the command output.
  changed_when: restorecon_output.rc != 0 # Uses the return code to define when the task has changed.

- name: download_media | Copy pxeboot Files to TFTP networkboot Directory {{ outer_item.netboot_directory }}
  ansible.builtin.copy:
    src: "{{ outer_item.mounted_src }}/{{ item }}"
    dest: "{{ outer_item.netboot_directory }}"
    force: true
    remote_src: true
    mode: "0644"
    directory_mode: "0755"
  loop: "{{ outer_item.pxeboot_files }}"
  ignore_errors: true
  register: ignore_errors_register

- name: download_media | Unmount ISO {{ outer_item.name }}
  ansible.posix.mount:
    path: "/mnt"
    state: unmounted

# Use the kernel and initrd files from the Bionic netboot.tar.gz archive,
# as I'm not sure the casper files are compatible with preseed/kickstart.
- name: download_media | Download Ubuntu 20.04 netboot.tar.gz Archive Files
  ansible.builtin.get_url:
    url: "{{ item }}"
    dest: "{{ outer_item.netboot_directory }}"
    mode: "0644"
  loop:
    - "{{ ubuntu_2004_netboot_linux }}"
    - "{{ ubuntu_2004_netboot_initrd }}"
  when: (outer_item.name == 'ubuntu2004server') or (outer_item.name == 'ubuntu2004desktop')
