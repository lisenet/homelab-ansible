---
- name: RedHat | Include Secure Vars
  ansible.builtin.include_vars:
    file: ../defaults/secure.yml

- name: RedHat | Install Packages
  ansible.builtin.package:
    name: "{{ item }}"
    state: present
  loop: "{{ packages }}"

- name: RedHat | Enable Service in Firewalld {{ firewall_port }}
  ansible.posix.firewalld:
    immediate: true
    service: "{{ firewall_port }}"
    permanent: true
    state: enabled

- name: RedHat | Create Logs Directory
  ansible.builtin.file:
    path: "/var/log/named"
    state: directory
    owner: "{{ bind_user }}"
    group: "{{ bind_user }}"
    mode: "0750"

- name: RedHat | SELinux - Set named_write_master_zones flag on and keep it persistent across reboots
  ansible.posix.seboolean:
    name: named_write_master_zones
    state: true
    persistent: true

- name: RedHat | SELinux - Allow Bind to Bind (no pun intended) to TCP Port {{ bind_statistics_port }}
  community.general.seport:
    ports: "{{ bind_statistics_port }}"
    proto: tcp
    setype: dns_port_t
    state: present

- name: RedHat | Configure Master DNS Server
  when: "'dns1' in group_names"
  block:
    - name: RedHat | Populate Internal Zone {{ bind_data_dir }}
      ansible.builtin.template:
        src: "files/db.hl.test"
        dest: "{{ bind_data_dir }}"
        owner: "{{ bind_user }}"
        group: "{{ bind_user }}"
        mode: "0644"
        validate: "named-checkzone {{ homelab_domain_name }} %s"
      notify:
        - Restart bind

    - name: RedHat | Populate Reverse Zone {{ bind_data_dir }}
      ansible.builtin.template:
        src: "files/db.1.11.10"
        dest: "{{ bind_data_dir }}"
        owner: "{{ bind_user }}"
        group: "{{ bind_user }}"
        mode: "0644"
        validate: "named-checkzone 1.11.10.in-addr.arpa %s"
      notify:
        - Restart bind

    - name: RedHat | Copy Configuration File {{ bind_config_file }}
      ansible.builtin.template:
        src: "{{ bind_config_file }}.master.j2"
        dest: "/etc/{{ bind_config_file }}"
        owner: root
        group: "{{ bind_user }}"
        mode: "0640"
        validate: "named-checkconf %s"
      notify:
        - Restart bind

- name: RedHat | Configure Slave DNS Server
  when: "'dns2' in group_names"
  block:
    - name: RedHat | Copy Configuration File {{ bind_config_file }}
      ansible.builtin.template:
        src: "{{ bind_config_file }}.slave.j2"
        dest: "/etc/{{ bind_config_file }}"
        owner: root
        group: "{{ bind_user }}"
        mode: "0640"
        validate: "named-checkconf %s"
      notify:
        - Restart bind

- name: RedHat | Start and Enable Service {{ systemd_service }}
  ansible.builtin.service:
    name: "{{ systemd_service }}"
    state: started
    enabled: true

- name: RedHat | Install DNS Updater Key
  ansible.builtin.template:
    src: "rndc.key.j2"
    dest: "/etc/rndc.key"
    owner: root
    group: "{{ bind_user }}"
    mode: "0640"
  notify:
    - Restart bind

#
# Configure Bind Exporter systemd service
#
- name: RedHat | Create System Group {{ prometheus_user }}
  ansible.builtin.group:
    state: present
    system: true
    name: "{{ prometheus_user }}"

- name: RedHat | Create System User {{ prometheus_user }}
  ansible.builtin.user:
    state: present
    system: true
    name: "{{ prometheus_user }}"
    groups: "{{ prometheus_user }}"
    shell: "/sbin/nologin"

- name: RedHat | Enable Service in Firewalld {{ bind_exporter_port }}
  ansible.posix.firewalld:
    immediate: true
    port: "{{ bind_exporter_port }}/tcp"
    permanent: true
    state: enabled

- name: RedHat | Unarchive a file that needs to be downloaded
  ansible.builtin.unarchive:
    src: "{{ bind_exporter_url }}"
    dest: "/usr/local/bin"
    remote_src: true
    owner: root
    group: root
    creates: "/usr/local/bin/{{ bind_exporter_binary }}"
    extra_opts:
      - "--strip-components"
      - "1"

- name: RedHat | Copy Systemd File {{ bind_exporter_systemd_service }}
  ansible.builtin.template:
    src: "{{ bind_exporter_systemd_service }}.j2"
    dest: "/etc/systemd/system/{{ bind_exporter_systemd_service }}"
    owner: root
    group: root
    mode: "0644"

- name: RedHat | Force Systemd to Reread Configs
  ansible.builtin.systemd:
    daemon_reload: true

- name: RedHat | Start and Enable Service {{ bind_exporter_systemd_service }}
  ansible.builtin.service:
    name: "{{ bind_exporter_systemd_service }}"
    state: started
    enabled: true
