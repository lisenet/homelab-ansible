---
# Inspired by: https://www.lisenet.com/2017/centos-7-server-hardening-guide/

#
# SELinux
#
- name: RedHat | Enable SELinux
  selinux:
    policy: targeted
    state: enforcing

#
# YUM
#
- name: RedHat | Ensure YUM Removes Previous Package Versions
  lineinfile:
    dest: "/etc/yum.conf"
    regexp: ^#?clean_requirements_on_remove
    line: clean_requirements_on_remove=1
    insertafter: '\[main\]'
      
- name: RedHat | Ensure GPG check Enabled for Local Packages (Yum)
  ini_file:
    dest: "{{ item }}"
    section: main
    option: localpkg_gpgcheck
    value: "1"
    create: True
  with_items: "/etc/yum.conf"
  when: ansible_distribution == "RedHat" or ansible_distribution == "CentOS"

- name: RedHat | Lock Kernel Version from Automatic Upgrades
  lineinfile:
    dest: "/etc/yum.conf"
    regexp: "^exclude=kernel"
    line: "exclude=kernel*"

#
# Install EPEL release
#
- name: RedHat | Install epel-release Package
  package:
    name: epel-release
    state: present

#
# Remove packages that you do not require on a server
#
- name: RedHat | Remove Packages
  package: 
    name: "{{ item }}"
    state: absent
  loop: "{{ packages_to_remove }}"

- name: RedHat | Disable Services
  service: 
    name: "{{ item }}"
    state: stopped
    enabled: no
  loop: "{{ services_to_disable }}"
  ignore_errors: yes

- name: RedHat | Install Malware Scanners
  package: 
    name: "{{ item }}"
    state: present
  loop: "{{ malware_scanners_to_install }}"

- name: RedHat | Install USBGuard on Virtual Servers
  package: 
    name: usbguard
    state: present
  when: "'virtual' in group_names"

#
# Disable uncommon network protocols and bluetooth
#
- name: RedHat | Ensure unnecessary kernel modules are disabled
  lineinfile:
    create: yes
    dest: "/etc/modprobe.d/ansible-hardening.conf"
    regexp: '{{ item }}'
    line: "install {{ item }} /bin/true"
  loop: "{{ modules_to_disable }}"

#
# Access Control
#
- name: RedHat | Prevent Log In to Accounts With Empty Password - system-auth
  replace:
    dest: "/etc/pam.d/system-auth"
    regexp: 'nullok'

- name: RedHat | Prevent Log In to Accounts With Empty Password - password-auth
  replace:
    dest: "/etc/pam.d/password-auth"
    regexp: 'nullok'

- name: RedHat | Set Password Minimum Length in login.defs
  lineinfile:
    dest: "/etc/login.defs"
    regexp: "^PASS_MIN_LEN *[0-9]*"
    state: present
    line: "PASS_MIN_LEN    {{ password_minlen_login_defs }}"

- name: RedHat | Set Password Minimum Age
  lineinfile:
    create: yes
    dest: "/etc/login.defs"
    regexp: "^#?PASS_MIN_DAYS"
    line: "PASS_MIN_DAYS   {{ password_mindays_login_defs }}"

- name: RedHat | Set Interactive Session Timeout
  lineinfile:
    create: yes
    dest: "/etc/profile"
    regexp: "^#?TMOUT"
    line: "readonly TMOUT={{ accounts_tmout }}"
  
- name: RedHat | Set accounts logon fail delay
  lineinfile:
    dest: "/etc/login.defs"
    regexp: "^FAIL_DELAY"
    line: "FAIL_DELAY {{ accounts_fail_delay }}"

- name: RedHat | Log failed login attempts
  lineinfile:
    dest: "/etc/login.defs"
    regexp: "^FAILLOG_ENAB"
    line: "FAILLOG_ENAB yes"

- name: RedHat | Ensure Home Directories are Created for New Users
  lineinfile:
    dest: "/etc/login.defs"
    regexp: "^CREATE_HOME"
    line: "CREATE_HOME yes"

- name: RedHat | Limit the Number of Concurrent Login Sessions Allowed Per User
  lineinfile:
    state: present
    dest: "/etc/security/limits.conf"
    insertbefore: "^# End of file"
    regexp: "^#?\\*.*maxlogins"
    line: "*           hard    maxlogins     {{ accounts_max_concurrent_login_sessions }}"

#
# Install Sysstat to collect performance activity
#
- name: RedHat | Install Sysstat Package
  package:
    name: sysstat
    state: present

- name: RedHat | Enable Sysstat Service
  service:
    name: sysstat
    state: started
    enabled: yes

#
# Enable Firewalld
#
- name: RedHat | Install Firewalld Package
  yum:
    name: firewalld
    state: installed
  when: "'k8s_node' not in group_names"

- name: RedHat | Enable Firewalld Service
  service:
    name: firewalld
    state: restarted
    enabled: yes
  when: "'k8s_node' not in group_names"

- name: RedHat | Disable Cockpit Service in Firewalld
  firewalld:
    immediate: yes
    service: cockpit
    permanent: yes
    state: disabled
  when: "'k8s_node' not in group_names"

# Because of Systemd, we need to use permissions of 0640, so that
# the group ssh_keys can read the generated ssh private keys for
# access to the system.
- name: RedHat | Ensure permission 0640 on /etc/ssh/*_key
  file:
    path: "/etc/ssh/{{ item }}"
    mode: 0640
  loop:
    - "ssh_host_ecdsa_key"
    - "ssh_host_ed25519_key"
    - "ssh_host_rsa_key"

#
# Install Lynis auditing software
#
- name: RedHat | Install Lynis Package
  package:
    name: lynis
    state: present

#
# Install process accounting software
#
- name: RedHat | Install Psacct Package
  package:
    name: psacct
    state: present

- name: RedHat | Enable Psacct Service
  service:
    name: psacct
    state: started
    enabled: yes

#
# Disable core dumps
#
- name: RedHat | Disable Core Dumps
  lineinfile:
    state: present
    dest: "/etc/security/limits.conf"
    insertbefore: "^# End of file"
    regexp: "^#?\\*.*core"
    line: "*           hard    core     0"

#
# Restrict programs from dangerous execution patterns
#
- name: RedHat | Restrict Programs from Dangerous Execution Patterns
  sysctl:
    name: "{{ item.name }}"
    value: "{{ item.value }}"
    state: present
    reload: yes
  loop:
    - name: fs.suid_dumpable
      value: 0
    - name: fs.protected_hardlinks
      value: 1
    - name: fs.protected_symlinks
      value: 1
    - name: fs.protected_fifos
      value: 2
    - name: fs.protected_regular
      value: 2
    - name: kernel.panic
      value: 10
    - name: kernel.sysrq
      value: 0
    - name: kernel.dmesg_restrict
      value: 1
    - name: kernel.randomize_va_space
      value: 2
    - name: kernel.kptr_restrict
      value: 2
    - name: kernel.kexec_load_disabled
      value: 1
    - name: kernel.yama.ptrace_scope
      value: 1

#
# IPv4 and IPv6 kernel networking values
#
- name: RedHat | Set Sysctl Values
  sysctl:
    name: "{{ item.name }}"
    value: "{{ item.value }}"
    state: present
    reload: yes
  loop:
    - name: net.core.bpf_jit_harden
      value: 2
    - name: net.ipv4.icmp_ignore_bogus_error_responses
      value: 1
    - name: net.ipv4.conf.all.log_martians
      value: 1
    - name: net.ipv4.conf.default.log_martians
      value: 1
    - name: net.ipv4.conf.all.secure_redirects
      value: 0
    - name: net.ipv4.conf.default.secure_redirects
      value: 0
    - name: net.ipv4.conf.all.accept_redirects
      value: 0
    - name: net.ipv4.conf.all.send_redirects
      value: 0
    - name: net.ipv4.conf.default.send_redirects
      value: 0
    - name: net.ipv4.icmp_echo_ignore_broadcasts
      value: 1
    - name: net.ipv4.conf.default.accept_redirects
      value: 0
    - name: net.ipv4.conf.all.accept_source_route
      value: 0
    - name: net.ipv4.conf.default.accept_source_route
      value: 0
    - name: net.ipv4.tcp_syncookies
      value: 1
    - name: net.ipv4.tcp_timestamps
      value: 1
    - name: net.ipv6.conf.all.accept_redirects
      value: 0
    - name: net.ipv6.conf.default.accept_redirects
      value: 0
    - name: net.ipv6.conf.lo.disable_ipv6
      value: 1
    - name: net.ipv6.conf.all.disable_ipv6
      value: 1
    - name: net.ipv6.conf.default.disable_ipv6
      value: 1
    - name: vm.swappiness
      value: 10

#
# Configure history file size
#
- name: RedHat | Configure History File Size
  lineinfile:
    dest: "/etc/profile"
    regexp: "^HISTSIZE"
    line: "HISTSIZE={{ history_file_size }}"

#
# Harden /proc
#
- name: RedHat | Set Option hidepid for /proc Filesystem
  mount:
    path: /proc
    src: proc
    fstype: proc
    opts: "{{ proc_mnt_options }}"
    state: mounted

- name: RedHat | Disable CTRL-ALT-DEL
  systemd:
    name: ctrl-alt-del.target
    masked: yes
    daemon_reload: yes
  when: ansible_service_mgr == "systemd"

#
# Configure security limits
#
- name: RedHat | Create limits.d Directory
  file:
    path: "/etc/security/limits.d"
    state: directory
    owner: root
    group: root
    mode: 0755

- name: RedHat | Create Security Limits Hardening File
  template:
    src: "hardening-limits.conf.j2"
    dest: "/etc/security/limits.d/hardening.conf"
    owner: root
    group: root
    mode: 0644

#
# Disable direct root login
#
- name: RedHat | Create Securetty
  template:
    src: "securetty.j2"
    dest: /etc/securetty
    owner: root
    group: root
    mode: 0400

#
# Harden cron directory permissions
#
- name: RedHat | Find cron Files and Directories
  find:
    paths:
      - /etc
    patterns:
      - cron.allow
      - cron.deny
      - cron.hourly
      - cron.daily
      - cron.weekly
      - cron.monthly
      - cron.d
      - crontab
    file_type: any
  register: cron_directories

- name: RedHat | Ensure Permissions on cron Files and Directories are Hardened
  file:
    path: "{{ item.path }}"
    owner: root
    group: root
    mode: og-rwx
  loop: "{{ cron_directories.files }}"

#
# Harden /home/* directory permissions
# 
- name: RedHat | Get All Home Directories in /home
  find:
    paths: /home/
    recurse: false
    file_type: directory
  register: home_directories

- name: RedHat | Set Ownership of /home Directories to 0700
  file:
    path: "{{ item.path }}"
    state: directory
    mode: 0700
  loop: "{{ home_directories.files }}"
